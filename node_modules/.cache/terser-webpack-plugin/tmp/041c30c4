{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[493],{690:function(t,e,a){\"use strict\";a.r(e);var i=a(0),r=Object(i.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"cdotagamerules\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#cdotagamerules\"}},[t._v(\"#\")]),t._v(\" CDOTAGamerules\")]),t._v(\" \"),a(\"table\",[a(\"thead\",[a(\"tr\",[a(\"th\",[t._v(\"Function\")]),t._v(\" \"),a(\"th\",[t._v(\"Description\")]),t._v(\" \"),a(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"Client\")])])]),t._v(\" \"),a(\"tbody\",[a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"AddBotPlayerWithEntityScript\"}},[t._v(\"handle AddBotPlayerWithEntityScript(string_1, string_2, int_3, string_4)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Spawn a bot player of the passed hero name, player name, and team.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"AddEventMetadataLeaderboardEntry\"}},[t._v(\"bool AddEventMetadataLeaderboardEntry(string_1, unsigned_2, unsigned_3, unsigned_4, unsigned_5, unsigned_6, unsigned_7, unsigned_8, unsigned_9)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Event-only ( string szNameSuffix, int nStars, int nMaxStars, int nExtraData1, int nExtraData2 )\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"AddItemToWhiteList\"}},[t._v(\"void AddItemToWhiteList(string_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Add an item to the whitelist\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"AddMinimapDebugPoint\"}},[t._v(\"void AddMinimapDebugPoint(int_1, Vector_2, int_3, int_4, int_5, int_6, float_7)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Add a point on the minimap.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"AddMinimapDebugPointForTeam\"}},[t._v(\"void AddMinimapDebugPointForTeam(int_1, Vector_2, int_3, int_4, int_5, int_6, float_7, int_8)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Add a point on the minimap for a specific team.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"BeginNightstalkerNight\"}},[t._v(\"void BeginNightstalkerNight(float_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Begin night stalker night.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"BeginTemporaryNight\"}},[t._v(\"void BeginTemporaryNight(float_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Begin temporary night.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"BotPopulate\"}},[t._v(\"void BotPopulate()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Fills all the teams with bots if cheat mode is enabled.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"Defeated\"}},[t._v(\"void Defeated()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Kills the ancient, etc.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"DidMatchSignoutTimeOut\"}},[t._v(\"bool DidMatchSignoutTimeOut()\")])]),t._v(\" \"),a(\"td\",[t._v(\"true when we have waited some time after end of the game and not received signout\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"EnableCustomGameSetupAutoLaunch\"}},[t._v(\"void EnableCustomGameSetupAutoLaunch(bool_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Enabled (true) or disable (false) auto launch for custom game setup.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"FinishCustomGameSetup\"}},[t._v(\"void FinishCustomGameSetup()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Indicate that the custom game setup phase is complete, and advance to the game.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"ForceCreepSpawn\"}},[t._v(\"void ForceCreepSpawn()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Spawn the next wave of creeps.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"ForceGameStart\"}},[t._v(\"void ForceGameStart()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Transition game state to DOTA_GAMERULES_STATE_GAME_IN_PROGRESS\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"GetCustomGameDifficulty\"}},[t._v(\"int GetCustomGameDifficulty()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Returns the difficulty level of the custom game mode\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✔\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"GetCustomGameTeamMaxPlayers\"}},[t._v(\"int GetCustomGameTeamMaxPlayers(int_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Get whether a team is selectable during game setup\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"GetDOTATime\"}},[t._v(\"float GetDOTATime(bool_1, bool_2)\")])]),t._v(\" \"),a(\"td\",[t._v(\"(b IncludePregameTime b IncludeNegativeTime) Returns the actual DOTA in-game clock time.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✔\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"GetDifficulty\"}},[t._v(\"int GetDifficulty()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Returns difficulty level of the custom game mode\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✔\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"GetDroppedItem\"}},[t._v(\"handle GetDroppedItem(int_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Gets the Xth dropped item\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"GetGameFrameTime\"}},[t._v(\"float GetGameFrameTime()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Returns the number of seconds elapsed since the last frame was renderered. This time doesn't count up when the game is paused\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✔\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"GetGameModeEntity\"}},[t._v(\"handle GetGameModeEntity()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Get the game mode entity\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"GetGameSessionConfigValue\"}},[t._v(\"string GetGameSessionConfigValue(string_1, string_2)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Get a string value from the game session config (map options)\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"GetGameTime\"}},[t._v(\"float GetGameTime()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Returns the number of seconds elapsed since map start. This time doesn't count up when the game is paused\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✔\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"GetMatchID\"}},[t._v(\"uint64 GetMatchID()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Get the MatchID for this game.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"GetMatchSignoutComplete\"}},[t._v(\"bool GetMatchSignoutComplete()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Have we received the post match signout message that includes reward information\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"GetNianTotalDamageTaken\"}},[t._v(\"int GetNianTotalDamageTaken()\")])]),t._v(\" \"),a(\"td\",[t._v(\"For New Bloom, get total damage taken by the Nian / Year Beast\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"GetPlayerCustomGameAccountRecord\"}},[t._v(\"table GetPlayerCustomGameAccountRecord(int_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"(Preview/Unreleased) Gets the player's custom game account record, as it looked at the start of this session\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"GetStateTransitionTime\"}},[t._v(\"float GetStateTransitionTime()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Get time remaining between state changes.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"GetTimeOfDay\"}},[t._v(\"float GetTimeOfDay()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Get the time of day\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"GetWeatherWindDirection\"}},[t._v(\"Vector GetWeatherWindDirection()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Get Weather Wind Direction Vector\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✔\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"IsCheatMode\"}},[t._v(\"bool IsCheatMode()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Are cheats enabled on the server\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✔\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"IsDaytime\"}},[t._v(\"bool IsDaytime()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Is it day time?\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"IsGamePaused\"}},[t._v(\"bool IsGamePaused()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Returns whether the game is paused.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"IsHeroRespawnEnabled\"}},[t._v(\"bool IsHeroRespawnEnabled()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Returns whether hero respawn is enabled.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"IsInBanPhase\"}},[t._v(\"bool IsInBanPhase()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Are we in the ban phase of hero pick?\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"IsItemInWhiteList\"}},[t._v(\"bool IsItemInWhiteList(string_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Query an item in the whitelist\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"IsNightstalkerNight\"}},[t._v(\"bool IsNightstalkerNight()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Is it night stalker night-time?\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"IsTemporaryNight\"}},[t._v(\"bool IsTemporaryNight()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Is it temporarily night-time?\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"LockCustomGameSetupTeamAssignment\"}},[t._v(\"void LockCustomGameSetupTeamAssignment(bool_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Lock (true) or unlock (false) team assignemnt. If team assignment is locked players cannot change teams.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"MakeTeamLose\"}},[t._v(\"void MakeTeamLose(int_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Makes the specified team lose\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"NumDroppedItems\"}},[t._v(\"int NumDroppedItems()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Returns the number of items currently dropped on the ground\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"PlayerHasCustomGameHostPrivileges\"}},[t._v(\"bool PlayerHasCustomGameHostPrivileges(handle_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Whether a player has custom game host privileges (shuffle teams, etc.)\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"Playtesting_UpdateAddOnKeyValues\"}},[t._v(\"void Playtesting_UpdateAddOnKeyValues()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Updates custom hero, unit and ability KeyValues in memory with the latest values from disk\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"PrepareSpawners\"}},[t._v(\"void PrepareSpawners(float_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Prepare Dota lane style spawners with a given interval\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"RemoveItemFromWhiteList\"}},[t._v(\"void RemoveItemFromWhiteList(string_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Remove an item from the whitelist\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"ResetDefeated\"}},[t._v(\"void ResetDefeated()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Restart after killing the ancient, etc.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"ResetGameTime\"}},[t._v(\"void ResetGameTime()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Restart gametime from 0\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"ResetToCustomGameSetup\"}},[t._v(\"void ResetToCustomGameSetup()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Restart at custom game setup.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"ResetToHeroSelection\"}},[t._v(\"void ResetToHeroSelection()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Restart the game at hero selection\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SendCustomMessage\"}},[t._v(\"void SendCustomMessage(string_1, int_2, int_3)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Sends a message on behalf of a player.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SendCustomMessageToTeam\"}},[t._v(\"void SendCustomMessageToTeam(string_1, int_2, int_3, int_4)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Sends a message on behalf of a player to the specified team.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetCreepMinimapIconScale\"}},[t._v(\"void SetCreepMinimapIconScale(float_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"(flMinimapCreepIconScale) - Scale the creep icons on the minimap.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetCreepSpawningEnabled\"}},[t._v(\"void SetCreepSpawningEnabled(bool_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Sets whether the regular Dota creeps spawn.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetCustomGameAccountRecordSaveFunction\"}},[t._v(\"void SetCustomGameAccountRecordSaveFunction(handle_1, handle_2)\")])]),t._v(\" \"),a(\"td\",[t._v(\"(Preview/Unreleased) Sets a callback to handle saving custom game account records (callback is passed a Player ID and should return a flat simple table)\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetCustomGameAllowBattleMusic\"}},[t._v(\"void SetCustomGameAllowBattleMusic(bool_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Sets a flag to enable/disable the default music handling code for custom games\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetCustomGameAllowHeroPickMusic\"}},[t._v(\"void SetCustomGameAllowHeroPickMusic(bool_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Sets a flag to enable/disable the default music handling code for custom games\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetCustomGameAllowMusicAtGameStart\"}},[t._v(\"void SetCustomGameAllowMusicAtGameStart(bool_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Sets a flag to enable/disable the default music handling code for custom games\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetCustomGameDifficulty\"}},[t._v(\"void SetCustomGameDifficulty(int_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set the difficulty level of the custom game mode\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetCustomGameEndDelay\"}},[t._v(\"void SetCustomGameEndDelay(float_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Sets the game end delay.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetCustomGameSetupAutoLaunchDelay\"}},[t._v(\"void SetCustomGameSetupAutoLaunchDelay(float_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set the amount of time to wait for auto launch.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetCustomGameSetupRemainingTime\"}},[t._v(\"void SetCustomGameSetupRemainingTime(float_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set the amount of remaining time, in seconds, for custom game setup. 0 = finish immediately, -1 = wait forever\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetCustomGameSetupTimeout\"}},[t._v(\"void SetCustomGameSetupTimeout(float_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Setup (pre-gameplay) phase timeout. 0 = instant, -1 = forever (until FinishCustomGameSetup is called)\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetCustomGameTeamMaxPlayers\"}},[t._v(\"void SetCustomGameTeamMaxPlayers(int_1, int_2)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set whether a team is selectable during game setup\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetCustomVictoryMessage\"}},[t._v(\"void SetCustomVictoryMessage(string_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Sets the victory message.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetCustomVictoryMessageDuration\"}},[t._v(\"void SetCustomVictoryMessageDuration(float_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Sets the victory message duration.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetEventMetadataCustomTable\"}},[t._v(\"bool SetEventMetadataCustomTable(handle_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Event-only ( table hMetadataTable )\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetEventSignoutCustomTable\"}},[t._v(\"bool SetEventSignoutCustomTable(handle_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Event-only ( table hMetadataTable )\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetFirstBloodActive\"}},[t._v(\"void SetFirstBloodActive(bool_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Sets whether First Blood has been triggered.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetGameWinner\"}},[t._v(\"void SetGameWinner(int_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Makes the specified team win\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetGoldPerTick\"}},[t._v(\"void SetGoldPerTick(int_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set the auto gold increase per timed interval.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetGoldTickTime\"}},[t._v(\"void SetGoldTickTime(float_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set the time interval between auto gold increases.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetHeroMinimapIconScale\"}},[t._v(\"void SetHeroMinimapIconScale(float_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"(flMinimapHeroIconScale) - Scale the hero minimap icons on the minimap.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetHeroRespawnEnabled\"}},[t._v(\"void SetHeroRespawnEnabled(bool_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Control if the normal DOTA hero respawn rules apply.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetHeroSelectPenaltyTime\"}},[t._v(\"void SetHeroSelectPenaltyTime(float_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Sets amount of penalty time before randoming a hero\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetHeroSelectionTime\"}},[t._v(\"void SetHeroSelectionTime(float_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Sets the amount of time players have to pick their hero.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetHideKillMessageHeaders\"}},[t._v(\"void SetHideKillMessageHeaders(bool_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Sets whether the multikill, streak, and first-blood banners appear at the top of the screen.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetOverlayHealthBarUnit\"}},[t._v(\"void SetOverlayHealthBarUnit(handle_1, int_2)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Show this unit's health on the overlay health bar\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetPostGameTime\"}},[t._v(\"void SetPostGameTime(float_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Sets the amount of time players have between the game ending and the server disconnecting them.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetPreGameTime\"}},[t._v(\"void SetPreGameTime(float_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Sets the amount of time players have between picking their hero and game start.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetRuneMinimapIconScale\"}},[t._v(\"void SetRuneMinimapIconScale(float_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"(flMinimapRuneIconScale) - Scale the rune icons on the minimap.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetRuneSpawnTime\"}},[t._v(\"void SetRuneSpawnTime(float_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Sets the amount of time between rune spawns.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetSafeToLeave\"}},[t._v(\"void SetSafeToLeave(bool_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"(bSafeToLeave) - Mark this game as safe to leave.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetSameHeroSelectionEnabled\"}},[t._v(\"void SetSameHeroSelectionEnabled(bool_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"When true, players can repeatedly pick the same hero.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetShowcaseTime\"}},[t._v(\"void SetShowcaseTime(float_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Sets the amount of time players have between the strategy phase and entering the pre-game phase.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetStartingGold\"}},[t._v(\"void SetStartingGold(int_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set the starting gold amount.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetStrategyTime\"}},[t._v(\"void SetStrategyTime(float_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Sets the amount of time players have between the hero selection and entering the showcase phase.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetTimeOfDay\"}},[t._v(\"void SetTimeOfDay(float_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set the time of day.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetTreeRegrowTime\"}},[t._v(\"void SetTreeRegrowTime(float_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Sets the tree regrow time in seconds.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetUseBaseGoldBountyOnHeroes\"}},[t._v(\"void SetUseBaseGoldBountyOnHeroes(bool_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Heroes will use the basic NPC functionality for determining their bounty, rather than DOTA specific formulas.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetUseCustomHeroXPValues\"}},[t._v(\"void SetUseCustomHeroXPValues(bool_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Allows heroes in the map to give a specific amount of XP (this value must be set).\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetUseUniversalShopMode\"}},[t._v(\"void SetUseUniversalShopMode(bool_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"When true, all items are available at as long as any shop is in range.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetWeatherWindDirection\"}},[t._v(\"void SetWeatherWindDirection(Vector_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set Weather Wind Direction Vector\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetWhiteListEnabled\"}},[t._v(\"void SetWhiteListEnabled(bool_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Item whitelist functionality enable/disable\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SpawnAndReleaseCreeps\"}},[t._v(\"void SpawnAndReleaseCreeps()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Spawn and release the next creep wave from Dota lane style spawners.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"State_Get\"}},[t._v(\"int State_Get()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Get the current Gamerules state\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✔\")])])])])])}),[],!1,null,null,null);e.default=r.exports}}]);","extractedComments":[]}