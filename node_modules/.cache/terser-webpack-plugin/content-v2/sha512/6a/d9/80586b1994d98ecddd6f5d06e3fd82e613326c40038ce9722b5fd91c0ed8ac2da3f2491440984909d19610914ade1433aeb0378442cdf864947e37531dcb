{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[3119],{3317:function(t,e,a){\"use strict\";a.r(e);var r=a(0),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"findpathlength\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#findpathlength\"}},[t._v(\"#\")]),t._v(\" FindPathLength\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"float FindPathLength(Vector_1, Vector_2)\\n\")])])]),a(\"h1\",{attrs:{id:\"class\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#class\"}},[t._v(\"#\")]),t._v(\" Class\")]),t._v(\" \"),a(\"p\",[t._v(\"✔ \"),a(\"code\",[t._v(\"Server: GridNav\")]),a(\"br\"),t._v(\"\\n✖ \"),a(\"code\",[t._v(\"Client: undefined\")])]),t._v(\" \"),a(\"h1\",{attrs:{id:\"function-description\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#function-description\"}},[t._v(\"#\")]),t._v(\" Function Description\")]),t._v(\" \"),a(\"p\",[t._v(\"Find a path between the two points an return the length of the path. If there is not a path between the points the returned value will be -1. float (vStart, vEnd )\")]),t._v(\" \"),a(\"h1\",{attrs:{id:\"parameters\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#parameters\"}},[t._v(\"#\")]),t._v(\" Parameters\")]),t._v(\" \"),a(\"table\",[a(\"thead\",[a(\"tr\",[a(\"th\",[t._v(\"Type\")]),t._v(\" \"),a(\"th\",[t._v(\"Name\")]),t._v(\" \"),a(\"th\",[t._v(\"Description\")])])]),t._v(\" \"),a(\"tbody\",[a(\"tr\",[a(\"td\",[t._v(\"Vector\")]),t._v(\" \"),a(\"td\",[t._v(\"Vector_1\")]),t._v(\" \"),a(\"td\",[t._v(\"No Description Set\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"Vector\")]),t._v(\" \"),a(\"td\",[t._v(\"Vector_2\")]),t._v(\" \"),a(\"td\",[t._v(\"No Description Set\")])])])])])}),[],!1,null,null,null);e.default=s.exports}}]);","extractedComments":[]}