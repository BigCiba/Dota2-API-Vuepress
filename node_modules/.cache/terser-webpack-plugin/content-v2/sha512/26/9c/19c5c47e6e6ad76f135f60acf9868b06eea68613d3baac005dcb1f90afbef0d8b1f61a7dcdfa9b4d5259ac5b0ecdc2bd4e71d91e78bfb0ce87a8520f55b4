{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[165],{365:function(t,e,r){\"use strict\";r.r(e);var s=r(0),a=Object(s.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[r(\"h1\",{attrs:{id:\"cbaseplayer\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#cbaseplayer\"}},[t._v(\"#\")]),t._v(\" CBasePlayer\")]),t._v(\" \"),r(\"table\",[r(\"thead\",[r(\"tr\",[r(\"th\",[t._v(\"Function\")]),t._v(\" \"),r(\"th\",[t._v(\"Description\")]),t._v(\" \"),r(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"Client\")])])]),t._v(\" \"),r(\"tbody\",[r(\"tr\",[r(\"td\",[r(\"a\",{attrs:{href:\"AreChaperoneBoundsVisible\"}},[t._v(\"bool AreChaperoneBoundsVisible()\")])]),t._v(\" \"),r(\"td\",[t._v(\"Returns whether this player's chaperone bounds are visible.\")]),t._v(\" \"),r(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),r(\"tr\",[r(\"td\",[r(\"a\",{attrs:{href:\"GetHMDAnchor\"}},[t._v(\"handle GetHMDAnchor()\")])]),t._v(\" \"),r(\"td\",[t._v(\"Returns the HMD anchor entity for this player if it exists.\")]),t._v(\" \"),r(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),r(\"tr\",[r(\"td\",[r(\"a\",{attrs:{href:\"GetHMDAvatar\"}},[t._v(\"handle GetHMDAvatar()\")])]),t._v(\" \"),r(\"td\",[t._v(\"Returns the HMD Avatar entity for this player if it exists.\")]),t._v(\" \"),r(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),r(\"tr\",[r(\"td\",[r(\"a\",{attrs:{href:\"GetPlayArea\"}},[t._v(\"Vector GetPlayArea(nPoint)\")])]),t._v(\" \"),r(\"td\",[t._v(\"Returns the Vector position of the point you ask for. Pass 0-3 to get the four points.\")]),t._v(\" \"),r(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),r(\"tr\",[r(\"td\",[r(\"a\",{attrs:{href:\"GetUserID\"}},[t._v(\"int GetUserID()\")])]),t._v(\" \"),r(\"td\",[t._v(\"Returns the player's user id.\")]),t._v(\" \"),r(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),r(\"tr\",[r(\"td\",[r(\"a\",{attrs:{href:\"GetVRControllerType\"}},[t._v(\"unknown GetVRControllerType()\")])]),t._v(\" \"),r(\"td\",[t._v(\"Returns the type of controller being used while in VR.\")]),t._v(\" \"),r(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),r(\"tr\",[r(\"td\",[r(\"a\",{attrs:{href:\"IsNoclipping\"}},[t._v(\"bool IsNoclipping()\")])]),t._v(\" \"),r(\"td\",[t._v(\"Returns true if the player is in noclip mode.\")]),t._v(\" \"),r(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),r(\"tr\",[r(\"td\",[r(\"a\",{attrs:{href:\"IsUsePressed\"}},[t._v(\"bool IsUsePressed()\")])]),t._v(\" \"),r(\"td\",[t._v(\"Returns true if the use key is pressed.\")]),t._v(\" \"),r(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),r(\"tr\",[r(\"td\",[r(\"a\",{attrs:{href:\"IsVRControllerButtonPressed\"}},[t._v(\"bool IsVRControllerButtonPressed(nButton)\")])]),t._v(\" \"),r(\"td\",[t._v(\"Returns true if the controller button is pressed.\")]),t._v(\" \"),r(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),r(\"tr\",[r(\"td\",[r(\"a\",{attrs:{href:\"IsVRDashboardShowing\"}},[t._v(\"bool IsVRDashboardShowing()\")])]),t._v(\" \"),r(\"td\",[t._v(\"Returns true if the SteamVR dashboard is showing for this player.\")]),t._v(\" \"),r(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])])])])])}),[],!1,null,null,null);e.default=a.exports}}]);","extractedComments":[]}