{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[367],{568:function(t,e,a){\"use strict\";a.r(e);var r=a(0),n=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"cdotabasegamemode\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#cdotabasegamemode\"}},[t._v(\"#\")]),t._v(\" CDOTABaseGameMode\")]),t._v(\" \"),a(\"table\",[a(\"thead\",[a(\"tr\",[a(\"th\",[t._v(\"Function\")]),t._v(\" \"),a(\"th\",[t._v(\"Description\")]),t._v(\" \"),a(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"Client\")])])]),t._v(\" \"),a(\"tbody\",[a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"AddRealTimeCombatAnalyzerQuery\"}},[t._v(\"int AddRealTimeCombatAnalyzerQuery(hQueryTable, hPlayer, pszQueryName)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Begin tracking a sequence of events using the real time combat analyzer.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"AreWeatherEffectsDisabled\"}},[t._v(\"bool AreWeatherEffectsDisabled()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Get if weather effects are disabled on the client.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"ClearBountyRunePickupFilter\"}},[t._v(\"void ClearBountyRunePickupFilter()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Clear the script filter that controls bounty rune pickup behavior.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"ClearDamageFilter\"}},[t._v(\"void ClearDamageFilter()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Clear the script filter that controls how a unit takes damage.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"ClearExecuteOrderFilter\"}},[t._v(\"void ClearExecuteOrderFilter()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Clear the script filter that controls when a unit picks up an item.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"ClearHealingFilter\"}},[t._v(\"void ClearHealingFilter()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Clear the script filter that controls how a unit heals.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"ClearItemAddedToInventoryFilter\"}},[t._v(\"void ClearItemAddedToInventoryFilter()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Clear the script filter that controls the item added to inventory filter.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"ClearModifierGainedFilter\"}},[t._v(\"void ClearModifierGainedFilter()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Clear the script filter that controls the modifier filter.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"ClearModifyExperienceFilter\"}},[t._v(\"void ClearModifyExperienceFilter()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Clear the script filter that controls how hero experience is modified.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"ClearModifyGoldFilter\"}},[t._v(\"void ClearModifyGoldFilter()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Clear the script filter that controls how hero gold is modified.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"ClearRuneSpawnFilter\"}},[t._v(\"void ClearRuneSpawnFilter()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Clear the script filter that controls what rune spawns.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"ClearTrackingProjectileFilter\"}},[t._v(\"void ClearTrackingProjectileFilter()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Clear the script filter that controls when tracking projectiles are launched.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"DisableHudFlip\"}},[t._v(\"void DisableHudFlip(bDisable)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Use to disable hud flip for this mod\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"GetAlwaysShowPlayerInventory\"}},[t._v(\"bool GetAlwaysShowPlayerInventory()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Show the player hero's inventory in the HUD, regardless of what unit is selected.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"GetAlwaysShowPlayerNames\"}},[t._v(\"bool GetAlwaysShowPlayerNames()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Get whether player names are always shown, regardless of client setting.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"GetAnnouncerDisabled\"}},[t._v(\"bool GetAnnouncerDisabled()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Are in-game announcers disabled?\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"GetCameraDistanceOverride\"}},[t._v(\"float GetCameraDistanceOverride()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set a different camera distance; dota default is 1134.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"GetCustomAttributeDerivedStatValue\"}},[t._v(\"float GetCustomAttributeDerivedStatValue(nDerivedStatType, hHero)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Get current derived stat value constant.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"GetCustomBackpackCooldownPercent\"}},[t._v(\"float GetCustomBackpackCooldownPercent()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Get the current rate cooldown ticks down for items in the backpack.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"GetCustomBackpackSwapCooldown\"}},[t._v(\"float GetCustomBackpackSwapCooldown()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Get the current custom backpack swap cooldown.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"GetCustomBuybackCooldownEnabled\"}},[t._v(\"bool GetCustomBuybackCooldownEnabled()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Turns on capability to define custom buyback cooldowns.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"GetCustomBuybackCostEnabled\"}},[t._v(\"bool GetCustomBuybackCostEnabled()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Turns on capability to define custom buyback costs.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"GetCustomGlyphCooldown\"}},[t._v(\"float GetCustomGlyphCooldown()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Get the current custom glyph cooldown.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"GetCustomHeroMaxLevel\"}},[t._v(\"int GetCustomHeroMaxLevel()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Allows definition of the max level heroes can achieve (default is 25).\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"GetCustomScanCooldown\"}},[t._v(\"float GetCustomScanCooldown()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Get the current custom scan cooldown.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"GetFixedRespawnTime\"}},[t._v(\"float GetFixedRespawnTime()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Gets the fixed respawn time.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"GetFogOfWarDisabled\"}},[t._v(\"bool GetFogOfWarDisabled()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Turn the fog of war on or off.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"GetGoldSoundDisabled\"}},[t._v(\"bool GetGoldSoundDisabled()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Turn the sound when gold is acquired off/on.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"GetHUDVisible\"}},[t._v(\"bool GetHUDVisible(iElement)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Returns the HUD element visibility.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"GetMaximumAttackSpeed\"}},[t._v(\"int GetMaximumAttackSpeed()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Get the maximum attack speed for units.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"GetMinimumAttackSpeed\"}},[t._v(\"int GetMinimumAttackSpeed()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Get the minimum attack speed for units.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"GetRecommendedItemsDisabled\"}},[t._v(\"bool GetRecommendedItemsDisabled()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Turn the panel for showing recommended items at the shop off/on.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"GetRespawnTimeScale\"}},[t._v(\"float GetRespawnTimeScale()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Returns the scale applied to non-fixed respawn times.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"GetStashPurchasingDisabled\"}},[t._v(\"bool GetStashPurchasingDisabled()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Turn purchasing items to the stash off/on. If purchasing to the stash is off the player must be at a shop to purchase items.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"GetStickyItemDisabled\"}},[t._v(\"bool GetStickyItemDisabled()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Hide the sticky item in the quickbuy.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"GetTopBarTeamValuesOverride\"}},[t._v(\"bool GetTopBarTeamValuesOverride()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Override the values of the team values on the top game bar.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"GetTopBarTeamValuesVisible\"}},[t._v(\"bool GetTopBarTeamValuesVisible()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Turning on/off the team values on the top game bar.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"GetTowerBackdoorProtectionEnabled\"}},[t._v(\"bool GetTowerBackdoorProtectionEnabled()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Gets whether tower backdoor protection is enabled or not.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"GetUseCustomHeroLevels\"}},[t._v(\"bool GetUseCustomHeroLevels()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Are custom-defined XP values for hero level ups in use?\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"IsBuybackEnabled\"}},[t._v(\"bool IsBuybackEnabled()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Enables or disables buyback completely.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"IsDaynightCycleDisabled\"}},[t._v(\"bool IsDaynightCycleDisabled()\")])]),t._v(\" \"),a(\"td\",[t._v(\"Is the day/night cycle disabled?\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"ListenForQueryFailed\"}},[t._v(\"void ListenForQueryFailed(hFunction, hContext)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set function and context for real time combat analyzer query failed.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"ListenForQueryProgressChanged\"}},[t._v(\"void ListenForQueryProgressChanged(hFunction, hContext)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set function and context for real time combat analyzer query progress changed.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"ListenForQuerySucceeded\"}},[t._v(\"void ListenForQuerySucceeded(hFunction, hContext)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set function and context for real time combat analyzer query succeeded.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"RemoveRealTimeCombatAnalyzerQuery\"}},[t._v(\"void RemoveRealTimeCombatAnalyzerQuery(nQueryID)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Stop tracking a combat analyzer query.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetAbilityTuningValueFilter\"}},[t._v(\"void SetAbilityTuningValueFilter(hFunction, hContext)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set a filter function to control the tuning values that abilities use. (Modify the table and Return true to use new values, return false to use the old values)\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetAlwaysShowPlayerInventory\"}},[t._v(\"void SetAlwaysShowPlayerInventory(bAlwaysShow)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Show the player hero's inventory in the HUD, regardless of what unit is selected.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetAlwaysShowPlayerNames\"}},[t._v(\"void SetAlwaysShowPlayerNames(bEnabled)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set whether player names are always shown, regardless of client setting.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetAnnouncerDisabled\"}},[t._v(\"void SetAnnouncerDisabled(bDisabled)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Mutes the in-game announcer.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetBotThinkingEnabled\"}},[t._v(\"void SetBotThinkingEnabled(bEnabled)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Enables/Disables bots in custom games. Note: this will only work with default heroes in the dota map.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetBotsAlwaysPushWithHuman\"}},[t._v(\"void SetBotsAlwaysPushWithHuman(bAlwaysPush)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set if the bots should try their best to push with a human player.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetBotsInLateGame\"}},[t._v(\"void SetBotsInLateGame(bLateGame)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set if bots should enable their late game behavior.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetBotsMaxPushTier\"}},[t._v(\"void SetBotsMaxPushTier(nMaxTier)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set the max tier of tower that bots want to push. (-1 to disable)\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetBountyRunePickupFilter\"}},[t._v(\"void SetBountyRunePickupFilter(hFunction, hContext)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set a filter function to control the behavior when a bounty rune is picked up. (Modify the table and Return true to use new values, return false to cancel the event)\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetBountyRuneSpawnInterval\"}},[t._v(\"void SetBountyRuneSpawnInterval(flInterval)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set bounty rune spawn rate\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetBuybackEnabled\"}},[t._v(\"void SetBuybackEnabled(bEnabled)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Enables or disables buyback completely.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetCameraDistanceOverride\"}},[t._v(\"void SetCameraDistanceOverride(flCameraDistanceOverride)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set a different camera distance; dota default is 1134.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetCameraSmoothCountOverride\"}},[t._v(\"void SetCameraSmoothCountOverride(nSmoothCount)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set a different camera smooth count; dota default is 8.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetCustomAttributeDerivedStatValue\"}},[t._v(\"void SetCustomAttributeDerivedStatValue(nStatType, flNewValue)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Modify derived stat value constants. ( AttributeDerivedStat eStatType, float flNewValue.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetCustomBackpackCooldownPercent\"}},[t._v(\"void SetCustomBackpackCooldownPercent(flPercent)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set the rate cooldown ticks down for items in the backpack.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetCustomBackpackSwapCooldown\"}},[t._v(\"void SetCustomBackpackSwapCooldown(flCooldown)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set a custom cooldown for swapping items into the backpack.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetCustomBuybackCooldownEnabled\"}},[t._v(\"void SetCustomBuybackCooldownEnabled(bEnabled)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Turns on capability to define custom buyback cooldowns.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetCustomBuybackCostEnabled\"}},[t._v(\"void SetCustomBuybackCostEnabled(bEnabled)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Turns on capability to define custom buyback costs.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetCustomGameForceHero\"}},[t._v(\"void SetCustomGameForceHero(pHeroName)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Force all players to use the specified hero and disable the normal hero selection process. Must be used before hero selection.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetCustomGlyphCooldown\"}},[t._v(\"void SetCustomGlyphCooldown(flCooldown)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set a custom cooldown for team Glyph ability.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetCustomHeroMaxLevel\"}},[t._v(\"void SetCustomHeroMaxLevel(int_1)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Allows definition of the max level heroes can achieve (default is 25).\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetCustomScanCooldown\"}},[t._v(\"void SetCustomScanCooldown(flCooldown)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set a custom cooldown for team Scan ability.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetCustomTerrainWeatherEffect\"}},[t._v(\"void SetCustomTerrainWeatherEffect(pszEffectName)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set the effect used as a custom weather effect, when units are on non-default terrain, in this mode.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetCustomXPRequiredToReachNextLevel\"}},[t._v(\"void SetCustomXPRequiredToReachNextLevel(hTable)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Allows definition of a table of hero XP values.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetDamageFilter\"}},[t._v(\"void SetDamageFilter(hFunction, hContext)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set a filter function to control the behavior when a unit takes damage. (Modify the table and Return true to use new values, return false to cancel the event)\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetDaynightCycleDisabled\"}},[t._v(\"void SetDaynightCycleDisabled(bDisable)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Enable or disable the day/night cycle.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetDeathOverlayDisabled\"}},[t._v(\"void SetDeathOverlayDisabled(bDisabled)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Specify whether the full screen death overlay effect plays when the selected hero dies.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetDraftingBanningTimeOverride\"}},[t._v(\"void SetDraftingBanningTimeOverride(flValue)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set drafting hero banning time\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetDraftingHeroPickSelectTimeOverride\"}},[t._v(\"void SetDraftingHeroPickSelectTimeOverride(flValue)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set drafting hero pick time\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetExecuteOrderFilter\"}},[t._v(\"void SetExecuteOrderFilter(hFunction, hContext)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set a filter function to control the behavior when a unit picks up an item. (Modify the table and Return true to use new values, return false to cancel the event)\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetFixedRespawnTime\"}},[t._v(\"void SetFixedRespawnTime(flFixedRespawnTime)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set a fixed delay for all players to respawn after.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetFogOfWarDisabled\"}},[t._v(\"void SetFogOfWarDisabled(bDisabled)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Turn the fog of war on or off.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetFountainConstantManaRegen\"}},[t._v(\"void SetFountainConstantManaRegen(flConstantManaRegen)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set the constant rate that the fountain will regen mana. (-1 for default)\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetFountainPercentageHealthRegen\"}},[t._v(\"void SetFountainPercentageHealthRegen(flPercentageHealthRegen)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set the percentage rate that the fountain will regen health. (-1 for default)\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetFountainPercentageManaRegen\"}},[t._v(\"void SetFountainPercentageManaRegen(flPercentageManaRegen)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set the percentage rate that the fountain will regen mana. (-1 for default)\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetFreeCourierModeEnabled\"}},[t._v(\"void SetFreeCourierModeEnabled(bEnabled)\")])]),t._v(\" \"),a(\"td\",[t._v(\"If set to true, enable 7.23 free courier mode.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetFriendlyBuildingMoveToEnabled\"}},[t._v(\"void SetFriendlyBuildingMoveToEnabled(bEnabled)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Allows clicks on friendly buildings to be handled normally.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetGoldSoundDisabled\"}},[t._v(\"void SetGoldSoundDisabled(bDisabled)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Turn the sound when gold is acquired off/on.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetHUDVisible\"}},[t._v(\"void SetHUDVisible(iHUDElement, bVisible)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set the HUD element visibility.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetHealingFilter\"}},[t._v(\"void SetHealingFilter(hFunction, hContext)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set a filter function to control the behavior when a unit heals. (Modify the table and Return true to use new values, return false to cancel the event)\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetHudCombatEventsDisabled\"}},[t._v(\"void SetHudCombatEventsDisabled(bDisabled)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Specify whether the default combat events will show in the HUD.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetItemAddedToInventoryFilter\"}},[t._v(\"void SetItemAddedToInventoryFilter(hFunction, hContext)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set a filter function to control what happens to items that are added to an inventory, return false to cancel the event\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetKillableTombstones\"}},[t._v(\"void SetKillableTombstones(bEnabled)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set whether tombstones can be channeled to be removed by enemy heroes.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetKillingSpreeAnnouncerDisabled\"}},[t._v(\"void SetKillingSpreeAnnouncerDisabled(bDisabled)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Mutes the in-game killing spree announcer.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetLoseGoldOnDeath\"}},[t._v(\"void SetLoseGoldOnDeath(bEnabled)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Use to disable gold loss on death.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetMaximumAttackSpeed\"}},[t._v(\"void SetMaximumAttackSpeed(nMaxSpeed)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set the maximum attack speed for units.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetMinimumAttackSpeed\"}},[t._v(\"void SetMinimumAttackSpeed(nMinSpeed)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set the minimum attack speed for units.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetModifierGainedFilter\"}},[t._v(\"void SetModifierGainedFilter(hFunction, hContext)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set a filter function to control modifiers that are gained, return false to destroy modifier.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetModifyExperienceFilter\"}},[t._v(\"void SetModifyExperienceFilter(hFunction, hContext)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set a filter function to control the behavior when a hero's experience is modified. (Modify the table and Return true to use new values, return false to cancel the event)\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetModifyGoldFilter\"}},[t._v(\"void SetModifyGoldFilter(hFunction, hContext)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set a filter function to control the behavior when a hero's gold is modified. (Modify the table and Return true to use new values, return false to cancel the event)\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetOverrideSelectionEntity\"}},[t._v(\"void SetOverrideSelectionEntity(hOverrideEntity)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set an override for the default selection entity, instead of each player's hero.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetPauseEnabled\"}},[t._v(\"void SetPauseEnabled(bEnabled)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set pausing enabled/disabled\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetPowerRuneSpawnInterval\"}},[t._v(\"void SetPowerRuneSpawnInterval(flInterval)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set power rune spawn rate\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetRecommendedItemsDisabled\"}},[t._v(\"void SetRecommendedItemsDisabled(bDisabled)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Turn the panel for showing recommended items at the shop off/on.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetRemoveIllusionsOnDeath\"}},[t._v(\"void SetRemoveIllusionsOnDeath(bRemove)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Make it so illusions are immediately removed upon death, rather than sticking around for a few seconds.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetRespawnTimeScale\"}},[t._v(\"void SetRespawnTimeScale(flValue)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Sets the scale applied to non-fixed respawn times. 1 = default DOTA respawn calculations.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetRuneEnabled\"}},[t._v(\"void SetRuneEnabled(nRune, bEnabled)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set if a given type of rune is enabled.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetRuneSpawnFilter\"}},[t._v(\"void SetRuneSpawnFilter(hFunction, hContext)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set a filter function to control what rune spawns. (Modify the table and Return true to use new values, return false to cancel the event)\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetSelectionGoldPenaltyEnabled\"}},[t._v(\"void SetSelectionGoldPenaltyEnabled(bEnabled)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Enable/disable gold penalty for late picking.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetStashPurchasingDisabled\"}},[t._v(\"void SetStashPurchasingDisabled(bDisabled)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Turn purchasing items to the stash off/on. If purchasing to the stash is off the player must be at a shop to purchase items.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetStickyItemDisabled\"}},[t._v(\"void SetStickyItemDisabled(bDisabled)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Hide the sticky item in the quickbuy.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetTopBarTeamValue\"}},[t._v(\"void SetTopBarTeamValue(iTeam, nValue)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set the team values on the top game bar.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetTopBarTeamValuesOverride\"}},[t._v(\"void SetTopBarTeamValuesOverride(bOverride)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Override the values of the team values on the top game bar.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetTopBarTeamValuesVisible\"}},[t._v(\"void SetTopBarTeamValuesVisible(bVisible)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Turning on/off the team values on the top game bar.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetTowerBackdoorProtectionEnabled\"}},[t._v(\"void SetTowerBackdoorProtectionEnabled(bEnabled)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Enables/Disables tower backdoor protection.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetTrackingProjectileFilter\"}},[t._v(\"void SetTrackingProjectileFilter(hFunction, hContext)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set a filter function to control when tracking projectiles are launched. (Modify the table and Return true to use new values, return false to cancel the event)\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetUnseenFogOfWarEnabled\"}},[t._v(\"void SetUnseenFogOfWarEnabled(bEnabled)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Enable or disable unseen fog of war. When enabled parts of the map the player has never seen will be completely hidden by fog of war.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetUseCustomHeroLevels\"}},[t._v(\"void SetUseCustomHeroLevels(bEnabled)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Turn on custom-defined XP values for hero level ups.  The table should be defined before switching this on.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetUseDefaultDOTARuneSpawnLogic\"}},[t._v(\"void SetUseDefaultDOTARuneSpawnLogic(bEnabled)\")])]),t._v(\" \"),a(\"td\",[t._v(\"If set to true, use current rune spawn rules.  Either setting respects custom spawn intervals.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[a(\"a\",{attrs:{href:\"SetWeatherEffectsDisabled\"}},[t._v(\"void SetWeatherEffectsDisabled(bDisable)\")])]),t._v(\" \"),a(\"td\",[t._v(\"Set if weather effects are disabled.\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"✖\")])])])])])}),[],!1,null,null,null);e.default=n.exports}}]);","extractedComments":[]}