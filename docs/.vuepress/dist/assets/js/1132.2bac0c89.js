(window.webpackJsonp=window.webpackJsonp||[]).push([[1132],{1332:function(t,e,a){"use strict";a.r(e);var r=a(0),i=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"cdota-buff"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cdota-buff"}},[t._v("#")]),t._v(" CDOTA_Buff")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Function")]),t._v(" "),a("th",[t._v("Description")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("Client")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("a",{attrs:{href:"AddParticle"}},[t._v("void AddParticle(i, bDestroyImmediately, bStatusEffect, iPriority, bHeroEffect, bOverheadEffect)")])]),t._v(" "),a("td",[t._v("(index, bDestroyImmediately, bStatusEffect, priority, bHeroEffect, bOverheadEffect")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"DecrementStackCount"}},[t._v("void DecrementStackCount()")])]),t._v(" "),a("td",[t._v("Decrease this modifier's stack count by 1.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"Destroy"}},[t._v("void Destroy()")])]),t._v(" "),a("td",[t._v("Run all associated destroy functions, then remove the modifier.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"ForceRefresh"}},[t._v("void ForceRefresh()")])]),t._v(" "),a("td",[t._v("Run all associated refresh functions on this modifier as if it was re-applied.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetAbility"}},[t._v("handle GetAbility()")])]),t._v(" "),a("td",[t._v("Get the ability that generated the modifier.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetAuraDuration"}},[t._v("float GetAuraDuration()")])]),t._v(" "),a("td",[t._v("Returns aura stickiness (default 0.5)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetAuraOwner"}},[t._v("handle GetAuraOwner()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetCaster"}},[t._v("handle GetCaster()")])]),t._v(" "),a("td",[t._v("Get the owner of the ability responsible for the modifier.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetClass"}},[t._v("string GetClass()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetCreationTime"}},[t._v("float GetCreationTime()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetDieTime"}},[t._v("float GetDieTime()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetDuration"}},[t._v("float GetDuration()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetElapsedTime"}},[t._v("float GetElapsedTime()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetLastAppliedTime"}},[t._v("float GetLastAppliedTime()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetName"}},[t._v("string GetName()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetParent"}},[t._v("handle GetParent()")])]),t._v(" "),a("td",[t._v("Get the unit the modifier is parented to.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetRemainingTime"}},[t._v("float GetRemainingTime()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetSerialNumber"}},[t._v("int GetSerialNumber()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetStackCount"}},[t._v("int GetStackCount()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"HasFunction"}},[t._v("bool HasFunction(iFunction)")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IncrementStackCount"}},[t._v("void IncrementStackCount()")])]),t._v(" "),a("td",[t._v("Increase this modifier's stack count by 1.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsDebuff"}},[t._v("bool IsDebuff()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsHexDebuff"}},[t._v("bool IsHexDebuff()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsStunDebuff"}},[t._v("bool IsStunDebuff()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetDuration"}},[t._v("void SetDuration(flDuration, bInformClient)")])]),t._v(" "),a("td",[t._v("(flTime, bInformClients)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetStackCount"}},[t._v("void SetStackCount(iCount)")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"StartIntervalThink"}},[t._v("void StartIntervalThink(flInterval)")])]),t._v(" "),a("td",[t._v("Start this modifier's think function (OnIntervalThink) with the given interval (float).  To stop, call with -1.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])])])])])}),[],!1,null,null,null);e.default=i.exports}}]);