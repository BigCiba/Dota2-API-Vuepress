(window.webpackJsonp=window.webpackJsonp||[]).push([[895],{1095:function(t,e,a){"use strict";a.r(e);var i=a(0),v=Object(i.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"cdota-basenpc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cdota-basenpc"}},[t._v("#")]),t._v(" CDOTA_BaseNPC")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Function")]),t._v(" "),a("th",[t._v("Description")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("Client")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("a",{attrs:{href:"AddAbility"}},[t._v("handle AddAbility(pszAbilityName)")])]),t._v(" "),a("td",[t._v("Add an ability to this unit by name.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"AddActivityModifier"}},[t._v("void AddActivityModifier(szName)")])]),t._v(" "),a("td",[t._v("Add an activity modifier that affects future StartGesture calls")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"AddItem"}},[t._v("handle AddItem(hItem)")])]),t._v(" "),a("td",[t._v("Add an item to this unit's inventory.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"AddItemByName"}},[t._v("handle AddItemByName(pszItemName)")])]),t._v(" "),a("td",[t._v("Add an item to this unit's inventory.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"AddNewModifier"}},[t._v("handle AddNewModifier(hCaster, hAbility, pszScriptName, hModifierTable)")])]),t._v(" "),a("td",[t._v("给一个单位添加modifier，hModifierTable可以传入持续时间和其他自定义参数，自定义参数可以在modifier中获得。")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"AddNoDraw"}},[t._v("void AddNoDraw()")])]),t._v(" "),a("td",[t._v("Adds the no draw flag.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"AddSpeechBubble"}},[t._v("void AddSpeechBubble(iBubble, pszSpeech, flDuration, unOffsetX, unOffsetY)")])]),t._v(" "),a("td",[t._v("Add a speech bubble(1-4 live at a time) to this NPC.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"AlertNearbyUnits"}},[t._v("void AlertNearbyUnits(hAttacker, hAbility)")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"AngerNearbyUnits"}},[t._v("void AngerNearbyUnits()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"AttackNoEarlierThan"}},[t._v("void AttackNoEarlierThan(flTime)")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"AttackReady"}},[t._v("bool AttackReady()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"BoundingRadius2D"}},[t._v("float BoundingRadius2D()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"CanEntityBeSeenByMyTeam"}},[t._v("bool CanEntityBeSeenByMyTeam(hEntity)")])]),t._v(" "),a("td",[t._v("Check FoW to see if an entity is visible.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"CanSellItems"}},[t._v("bool CanSellItems()")])]),t._v(" "),a("td",[t._v("Query if this unit can sell items.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"CastAbilityImmediately"}},[t._v("void CastAbilityImmediately(hAbility, iPlayerIndex)")])]),t._v(" "),a("td",[t._v("Cast an ability immediately.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"CastAbilityNoTarget"}},[t._v("void CastAbilityNoTarget(hAbility, iPlayerIndex)")])]),t._v(" "),a("td",[t._v("Cast an ability with no target.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"CastAbilityOnPosition"}},[t._v("void CastAbilityOnPosition(vPosition, hAbility, iPlayerIndex)")])]),t._v(" "),a("td",[t._v("Cast an ability on a position.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"CastAbilityOnTarget"}},[t._v("void CastAbilityOnTarget(hTarget, hAbility, iPlayerIndex)")])]),t._v(" "),a("td",[t._v("Cast an ability on a target entity.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"CastAbilityToggle"}},[t._v("void CastAbilityToggle(hAbility, iPlayerIndex)")])]),t._v(" "),a("td",[t._v("Toggle an ability.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"ClearActivityModifiers"}},[t._v("void ClearActivityModifiers()")])]),t._v(" "),a("td",[t._v("Clear Activity modifiers")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"DestroyAllSpeechBubbles"}},[t._v("void DestroyAllSpeechBubbles()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"DisassembleItem"}},[t._v("void DisassembleItem(hItem)")])]),t._v(" "),a("td",[t._v("Disassemble the passed item in this unit's inventory.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"DropItemAtPosition"}},[t._v("void DropItemAtPosition(vDest, hItem)")])]),t._v(" "),a("td",[t._v("Drop an item at a given point.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"DropItemAtPositionImmediate"}},[t._v("void DropItemAtPositionImmediate(hItem, vPosition)")])]),t._v(" "),a("td",[t._v("Immediately drop a carried item at a given position.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"EjectItemFromStash"}},[t._v("void EjectItemFromStash(hItem)")])]),t._v(" "),a("td",[t._v("Drops the selected item out of this unit's stash.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"FaceTowards"}},[t._v("void FaceTowards(vTarget)")])]),t._v(" "),a("td",[t._v("This unit will be set to face the target point.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"FadeGesture"}},[t._v("void FadeGesture(nActivity)")])]),t._v(" "),a("td",[t._v("Fade and remove the given gesture activity.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"FindAbilityByName"}},[t._v("handle FindAbilityByName(pAbilityName)")])]),t._v(" "),a("td",[t._v("Retrieve an ability by name from the unit.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"FindAllModifiers"}},[t._v("table FindAllModifiers()")])]),t._v(" "),a("td",[t._v("Returns a table of all of the modifiers on the NPC.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"FindAllModifiersByName"}},[t._v("table FindAllModifiersByName(pszScriptName)")])]),t._v(" "),a("td",[t._v("Returns a table of all of the modifiers on the NPC with the passed name (modifierName)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"FindItemInInventory"}},[t._v("handle FindItemInInventory(pszItemName)")])]),t._v(" "),a("td",[t._v("Get handle to first item in inventory, else nil.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"FindModifierByName"}},[t._v("handle FindModifierByName(pszScriptName)")])]),t._v(" "),a("td",[t._v("Return a handle to the modifier of the given name if found, else nil (string Name )")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"FindModifierByNameAndCaster"}},[t._v("handle FindModifierByNameAndCaster(pszScriptName, hCaster)")])]),t._v(" "),a("td",[t._v("Return a handle to the modifier of the given name from the passed caster if found, else nil ( string Name, hCaster )")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"ForceKill"}},[t._v("void ForceKill(bReincarnate)")])]),t._v(" "),a("td",[t._v("Kill this unit immediately.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"ForcePlayActivityOnce"}},[t._v("void ForcePlayActivityOnce(nActivity)")])]),t._v(" "),a("td",[t._v("Play an activity once, and then go back to idle.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetAbilityByIndex"}},[t._v("handle GetAbilityByIndex(iIndex)")])]),t._v(" "),a("td",[t._v("Retrieve an ability by index from the unit.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetAbilityCount"}},[t._v("int GetAbilityCount()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetAcquisitionRange"}},[t._v("float GetAcquisitionRange()")])]),t._v(" "),a("td",[t._v("Gets the range at which this unit will auto-acquire.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetAdditionalBattleMusicWeight"}},[t._v("float GetAdditionalBattleMusicWeight()")])]),t._v(" "),a("td",[t._v("Combat involving this creature will have this weight added to the music calcuations.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetAggroTarget"}},[t._v("handle GetAggroTarget()")])]),t._v(" "),a("td",[t._v("Returns this unit's aggro target.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetAttackAnimationPoint"}},[t._v("float GetAttackAnimationPoint()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetAttackCapability"}},[t._v("int GetAttackCapability()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetAttackDamage"}},[t._v("int GetAttackDamage()")])]),t._v(" "),a("td",[t._v("Returns a random integer between the minimum and maximum base damage of the unit.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetAttackRangeBuffer"}},[t._v("float GetAttackRangeBuffer()")])]),t._v(" "),a("td",[t._v("Gets the attack range buffer.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetAttackSpeed"}},[t._v("float GetAttackSpeed()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetAttackTarget"}},[t._v("handle GetAttackTarget()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetAttacksPerSecond"}},[t._v("float GetAttacksPerSecond()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetAverageTrueAttackDamage"}},[t._v("int GetAverageTrueAttackDamage(hTarget)")])]),t._v(" "),a("td",[t._v("Returns the average value of the minimum and maximum damage values.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetBaseAttackRange"}},[t._v("int GetBaseAttackRange()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetBaseAttackTime"}},[t._v("float GetBaseAttackTime()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetBaseDamageMax"}},[t._v("int GetBaseDamageMax()")])]),t._v(" "),a("td",[t._v("Get the maximum attack damage of this unit.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetBaseDamageMin"}},[t._v("int GetBaseDamageMin()")])]),t._v(" "),a("td",[t._v("Get the minimum attack damage of this unit.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetBaseDayTimeVisionRange"}},[t._v("int GetBaseDayTimeVisionRange()")])]),t._v(" "),a("td",[t._v("Returns the vision range before modifiers.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetBaseHealthRegen"}},[t._v("float GetBaseHealthRegen()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetBaseMagicalResistanceValue"}},[t._v("float GetBaseMagicalResistanceValue()")])]),t._v(" "),a("td",[t._v("Returns base magical armor value.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetBaseMaxHealth"}},[t._v("float GetBaseMaxHealth()")])]),t._v(" "),a("td",[t._v("Gets the base max health value.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetBaseMoveSpeed"}},[t._v("float GetBaseMoveSpeed()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetBaseNightTimeVisionRange"}},[t._v("int GetBaseNightTimeVisionRange()")])]),t._v(" "),a("td",[t._v("Returns the vision range after modifiers.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetBonusManaRegen"}},[t._v("float GetBonusManaRegen()")])]),t._v(" "),a("td",[t._v("This Mana regen is derived from constant bonuses like Basilius.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetCastPoint"}},[t._v("float GetCastPoint(bAttack)")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetCastRangeBonus"}},[t._v("float GetCastRangeBonus()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetCloneSource"}},[t._v("handle GetCloneSource()")])]),t._v(" "),a("td",[t._v("Get clone source (Meepo Prime, if this is a Meepo)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetCollisionPadding"}},[t._v("float GetCollisionPadding()")])]),t._v(" "),a("td",[t._v("Returns the size of the collision padding around the hull.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetCooldownReduction"}},[t._v("float GetCooldownReduction()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetCreationTime"}},[t._v("float GetCreationTime()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetCurrentActiveAbility"}},[t._v("handle GetCurrentActiveAbility()")])]),t._v(" "),a("td",[t._v("Get the ability this unit is currently casting.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetCurrentVisionRange"}},[t._v("int GetCurrentVisionRange()")])]),t._v(" "),a("td",[t._v("Gets the current vision range.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetCursorCastTarget"}},[t._v("handle GetCursorCastTarget()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetCursorPosition"}},[t._v("Vector GetCursorPosition()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetCursorTargetingNothing"}},[t._v("bool GetCursorTargetingNothing()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetDayTimeVisionRange"}},[t._v("int GetDayTimeVisionRange()")])]),t._v(" "),a("td",[t._v("Returns the vision range after modifiers.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetDeathXP"}},[t._v("int GetDeathXP()")])]),t._v(" "),a("td",[t._v("Get the XP bounty on this unit.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetDisplayAttackSpeed"}},[t._v("float GetDisplayAttackSpeed()")])]),t._v(" "),a("td",[t._v("Attack speed expressed as constant value")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetEvasion"}},[t._v("float GetEvasion()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetForceAttackTarget"}},[t._v("handle GetForceAttackTarget()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetGoldBounty"}},[t._v("int GetGoldBounty()")])]),t._v(" "),a("td",[t._v("Get the gold bounty on this unit.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetHasteFactor"}},[t._v("float GetHasteFactor()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetHealthDeficit"}},[t._v("int GetHealthDeficit()")])]),t._v(" "),a("td",[t._v("Returns integer amount of health missing from max.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetHealthPercent"}},[t._v("int GetHealthPercent()")])]),t._v(" "),a("td",[t._v("Get the current health percent of the unit.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetHealthRegen"}},[t._v("float GetHealthRegen()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetHullRadius"}},[t._v("float GetHullRadius()")])]),t._v(" "),a("td",[t._v("Get the collision hull radius of this NPC.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetIdealSpeed"}},[t._v("float GetIdealSpeed()")])]),t._v(" "),a("td",[t._v("Returns speed after all modifiers.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetIdealSpeedNoSlows"}},[t._v("float GetIdealSpeedNoSlows()")])]),t._v(" "),a("td",[t._v("Returns speed after all modifiers, but excluding those that reduce speed.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetIncreasedAttackSpeed"}},[t._v("float GetIncreasedAttackSpeed()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetInitialGoalEntity"}},[t._v("handle GetInitialGoalEntity()")])]),t._v(" "),a("td",[t._v("Returns the initial waypoint goal for this NPC.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetInitialGoalPosition"}},[t._v("Vector GetInitialGoalPosition()")])]),t._v(" "),a("td",[t._v("Get waypoint position for this NPC.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetItemInSlot"}},[t._v("handle GetItemInSlot(i)")])]),t._v(" "),a("td",[t._v("Returns nth item in inventory slot (index is zero based).")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetLastAttackTime"}},[t._v("float GetLastAttackTime()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetLastDamageTime"}},[t._v("float GetLastDamageTime()")])]),t._v(" "),a("td",[t._v("Get the last time this NPC took damage")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetLastIdleChangeTime"}},[t._v("float GetLastIdleChangeTime()")])]),t._v(" "),a("td",[t._v("Get the last game time that this unit switched to/from idle state.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetLevel"}},[t._v("int GetLevel()")])]),t._v(" "),a("td",[t._v("Returns the level of this unit.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetMagicalArmorValue"}},[t._v("float GetMagicalArmorValue()")])]),t._v(" "),a("td",[t._v("Returns current magical armor value.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetMainControllingPlayer"}},[t._v("int GetMainControllingPlayer()")])]),t._v(" "),a("td",[t._v("Returns the player ID of the controlling player.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetMana"}},[t._v("float GetMana()")])]),t._v(" "),a("td",[t._v("Get the mana on this unit.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetManaPercent"}},[t._v("int GetManaPercent()")])]),t._v(" "),a("td",[t._v("Get the percent of mana remaining.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetManaRegen"}},[t._v("float GetManaRegen()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetMaxMana"}},[t._v("float GetMaxMana()")])]),t._v(" "),a("td",[t._v("Get the maximum mana of this unit.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetMaximumGoldBounty"}},[t._v("int GetMaximumGoldBounty()")])]),t._v(" "),a("td",[t._v("Get the maximum gold bounty for this unit.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetMinimumGoldBounty"}},[t._v("int GetMinimumGoldBounty()")])]),t._v(" "),a("td",[t._v("Get the minimum gold bounty for this unit.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetModelRadius"}},[t._v("float GetModelRadius()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetModifierCount"}},[t._v("int GetModifierCount()")])]),t._v(" "),a("td",[t._v("How many modifiers does this unit have?")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetModifierNameByIndex"}},[t._v("string GetModifierNameByIndex(nIndex)")])]),t._v(" "),a("td",[t._v("Get a modifier name by index.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetModifierStackCount"}},[t._v("int GetModifierStackCount(pszScriptName, hCaster)")])]),t._v(" "),a("td",[t._v("Gets the stack count of a given modifier.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetMoveSpeedModifier"}},[t._v("float GetMoveSpeedModifier(flBaseSpeed, bReturnUnslowed)")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetMustReachEachGoalEntity"}},[t._v("bool GetMustReachEachGoalEntity()")])]),t._v(" "),a("td",[t._v("Set whether this NPC is required to reach each goal entity, rather than being allowed to unkink their path.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetNeverMoveToClearSpace"}},[t._v("bool GetNeverMoveToClearSpace()")])]),t._v(" "),a("td",[t._v("If set to true, we will never attempt to move this unit to clear space, even when it unphases.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetNightTimeVisionRange"}},[t._v("int GetNightTimeVisionRange()")])]),t._v(" "),a("td",[t._v("Returns the vision range after modifiers.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetOpposingTeamNumber"}},[t._v("int GetOpposingTeamNumber()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetPaddedCollisionRadius"}},[t._v("float GetPaddedCollisionRadius()")])]),t._v(" "),a("td",[t._v("Get the collision hull radius (including padding) of this NPC.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetPhysicalArmorBaseValue"}},[t._v("float GetPhysicalArmorBaseValue()")])]),t._v(" "),a("td",[t._v("Returns base physical armor value.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetPhysicalArmorValue"}},[t._v("float GetPhysicalArmorValue(bIgnoreBase)")])]),t._v(" "),a("td",[t._v("Returns current physical armor value.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetPlayerOwner"}},[t._v("handle GetPlayerOwner()")])]),t._v(" "),a("td",[t._v("Returns the player that owns this unit.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetPlayerOwnerID"}},[t._v("int GetPlayerOwnerID()")])]),t._v(" "),a("td",[t._v("Get the owner player ID for this unit.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetProjectileSpeed"}},[t._v("int GetProjectileSpeed()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetRangeToUnit"}},[t._v("float GetRangeToUnit(hNPC)")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetRangedProjectileName"}},[t._v("string GetRangedProjectileName()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetSecondsPerAttack"}},[t._v("float GetSecondsPerAttack()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetSpellAmplification"}},[t._v("float GetSpellAmplification(bBaseOnly)")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetStatusResistance"}},[t._v("float GetStatusResistance()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetTotalPurchasedUpgradeGoldCost"}},[t._v("int GetTotalPurchasedUpgradeGoldCost()")])]),t._v(" "),a("td",[t._v("Get how much gold has been spent on ability upgrades.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetUnitLabel"}},[t._v("string GetUnitLabel()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GetUnitName"}},[t._v("string GetUnitName()")])]),t._v(" "),a("td",[t._v("Get the name of this unit.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"GiveMana"}},[t._v("void GiveMana(flMana)")])]),t._v(" "),a("td",[t._v("Give mana to this unit, this can be used for mana gained by abilities or item usage.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"HasAbility"}},[t._v("bool HasAbility(pszAbilityName)")])]),t._v(" "),a("td",[t._v("See whether this unit has an ability by name.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"HasAnyActiveAbilities"}},[t._v("bool HasAnyActiveAbilities()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"HasAttackCapability"}},[t._v("bool HasAttackCapability()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"HasFlyMovementCapability"}},[t._v("bool HasFlyMovementCapability()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"HasFlyingVision"}},[t._v("bool HasFlyingVision()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"HasGroundMovementCapability"}},[t._v("bool HasGroundMovementCapability()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"HasInventory"}},[t._v("bool HasInventory()")])]),t._v(" "),a("td",[t._v("Does this unit have an inventory.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"HasItemInInventory"}},[t._v("bool HasItemInInventory(pItemName)")])]),t._v(" "),a("td",[t._v("See whether this unit has an item by name.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"HasModifier"}},[t._v("bool HasModifier(pszScriptName)")])]),t._v(" "),a("td",[t._v("Sees if this unit has a given modifier.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"HasMovementCapability"}},[t._v("bool HasMovementCapability()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"HasScepter"}},[t._v("bool HasScepter()")])]),t._v(" "),a("td",[t._v("判断单位是否拥有阿哈利姆神杖升级效果")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"Heal"}},[t._v("void Heal(flAmount, hInflictor)")])]),t._v(" "),a("td",[t._v("Heal this unit.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"Hold"}},[t._v("void Hold()")])]),t._v(" "),a("td",[t._v("Hold position.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"Interrupt"}},[t._v("void Interrupt()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"InterruptChannel"}},[t._v("void InterruptChannel()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"InterruptMotionControllers"}},[t._v("void InterruptMotionControllers(bFindClearSpace)")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsAlive"}},[t._v("bool IsAlive()")])]),t._v(" "),a("td",[t._v("Is this unit alive?")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsAncient"}},[t._v("bool IsAncient()")])]),t._v(" "),a("td",[t._v("Is this unit an Ancient?")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsAttackImmune"}},[t._v("bool IsAttackImmune()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsAttacking"}},[t._v("bool IsAttacking()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsAttackingEntity"}},[t._v("bool IsAttackingEntity(hEntity)")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsBarracks"}},[t._v("bool IsBarracks()")])]),t._v(" "),a("td",[t._v("Is this unit a Barracks?")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsBlind"}},[t._v("bool IsBlind()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsBlockDisabled"}},[t._v("bool IsBlockDisabled()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsBoss"}},[t._v("bool IsBoss()")])]),t._v(" "),a("td",[t._v("Is this unit a boss?")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsBuilding"}},[t._v("bool IsBuilding()")])]),t._v(" "),a("td",[t._v("Is this unit a building?")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsChanneling"}},[t._v("bool IsChanneling()")])]),t._v(" "),a("td",[t._v("Is this unit currently channeling a spell?")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsClone"}},[t._v("bool IsClone()")])]),t._v(" "),a("td",[t._v("Is this unit a clone? (Meepo)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsCommandRestricted"}},[t._v("bool IsCommandRestricted()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsConsideredHero"}},[t._v("bool IsConsideredHero()")])]),t._v(" "),a("td",[t._v("Is this unit a considered a hero for targeting purposes?")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsControllableByAnyPlayer"}},[t._v("bool IsControllableByAnyPlayer()")])]),t._v(" "),a("td",[t._v("Is this unit controlled by any non-bot player?")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsCourier"}},[t._v("bool IsCourier()")])]),t._v(" "),a("td",[t._v("Is this unit a courier?")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsCreature"}},[t._v("bool IsCreature()")])]),t._v(" "),a("td",[t._v("Is this a Creature type NPC?")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsCreep"}},[t._v("bool IsCreep()")])]),t._v(" "),a("td",[t._v("Is this unit a creep?")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsDeniable"}},[t._v("bool IsDeniable()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsDisarmed"}},[t._v("bool IsDisarmed()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsDominated"}},[t._v("bool IsDominated()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsEvadeDisabled"}},[t._v("bool IsEvadeDisabled()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsFort"}},[t._v("bool IsFort()")])]),t._v(" "),a("td",[t._v("Is this unit an Ancient?")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsFrozen"}},[t._v("bool IsFrozen()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsHero"}},[t._v("bool IsHero()")])]),t._v(" "),a("td",[t._v("Is this a hero or hero illusion?")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsHexed"}},[t._v("bool IsHexed()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsIdle"}},[t._v("bool IsIdle()")])]),t._v(" "),a("td",[t._v("Is this creature currently idle?")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsIllusion"}},[t._v("bool IsIllusion()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsInRangeOfShop"}},[t._v("bool IsInRangeOfShop(nShopType, bPhysical)")])]),t._v(" "),a("td",[t._v("Ask whether this unit is in range of the specified shop ( DOTA_SHOP_TYPE shop, bool bMustBePhysicallyNear")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsInvisible"}},[t._v("bool IsInvisible()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsInvulnerable"}},[t._v("bool IsInvulnerable()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsLowAttackPriority"}},[t._v("bool IsLowAttackPriority()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsMagicImmune"}},[t._v("bool IsMagicImmune()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsMovementImpaired"}},[t._v("bool IsMovementImpaired()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsMoving"}},[t._v("bool IsMoving()")])]),t._v(" "),a("td",[t._v("Is this unit moving?")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsMuted"}},[t._v("bool IsMuted()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsNeutralUnitType"}},[t._v("bool IsNeutralUnitType()")])]),t._v(" "),a("td",[t._v("Is this a neutral?")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsNightmared"}},[t._v("bool IsNightmared()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsOpposingTeam"}},[t._v("bool IsOpposingTeam(nTeam)")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsOther"}},[t._v("bool IsOther()")])]),t._v(" "),a("td",[t._v("Is this unit a ward-type unit?")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsOutOfGame"}},[t._v("bool IsOutOfGame()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsOwnedByAnyPlayer"}},[t._v("bool IsOwnedByAnyPlayer()")])]),t._v(" "),a("td",[t._v("Is this unit owned by any non-bot player?")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsPhantom"}},[t._v("bool IsPhantom()")])]),t._v(" "),a("td",[t._v("Is this a phantom unit?")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsPhantomBlocker"}},[t._v("bool IsPhantomBlocker()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsPhased"}},[t._v("bool IsPhased()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsPositionInRange"}},[t._v("bool IsPositionInRange(vPosition, flRange)")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsRangedAttacker"}},[t._v("bool IsRangedAttacker()")])]),t._v(" "),a("td",[t._v("Is this unit a ranged attacker?")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsRealHero"}},[t._v("bool IsRealHero()")])]),t._v(" "),a("td",[t._v("Is this a real hero?")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsRooted"}},[t._v("bool IsRooted()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsShrine"}},[t._v("bool IsShrine()")])]),t._v(" "),a("td",[t._v("Is this a shrine?")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsSilenced"}},[t._v("bool IsSilenced()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsSpeciallyDeniable"}},[t._v("bool IsSpeciallyDeniable()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsStunned"}},[t._v("bool IsStunned()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsSummoned"}},[t._v("bool IsSummoned()")])]),t._v(" "),a("td",[t._v("Is this unit summoned?")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsTempestDouble"}},[t._v("bool IsTempestDouble()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsTower"}},[t._v("bool IsTower()")])]),t._v(" "),a("td",[t._v("Is this a tower?")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsUnableToMiss"}},[t._v("bool IsUnableToMiss()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsUnselectable"}},[t._v("bool IsUnselectable()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"IsUntargetable"}},[t._v("bool IsUntargetable()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"Kill"}},[t._v("void Kill(hAbility, hAttacker)")])]),t._v(" "),a("td",[t._v("Kills this NPC, with the params Ability and Attacker.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"MakeIllusion"}},[t._v("void MakeIllusion()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"MakePhantomBlocker"}},[t._v("void MakePhantomBlocker()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"MakeVisibleDueToAttack"}},[t._v("void MakeVisibleDueToAttack(iTeam, flRadius)")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"MakeVisibleToTeam"}},[t._v("void MakeVisibleToTeam(iTeam, flDuration)")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"ManageModelChanges"}},[t._v("void ManageModelChanges()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"ModifyHealth"}},[t._v("void ModifyHealth(iDesiredHealthValue, hAbility, bLethal, iAdditionalFlags)")])]),t._v(" "),a("td",[t._v("Sets the health to a specific value, with optional flags or inflictors.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"MoveToNPC"}},[t._v("void MoveToNPC(hNPC)")])]),t._v(" "),a("td",[t._v("Move to follow a unit.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"MoveToNPCToGiveItem"}},[t._v("void MoveToNPCToGiveItem(hNPC, hItem)")])]),t._v(" "),a("td",[t._v("Give an item to another unit.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"MoveToPosition"}},[t._v("void MoveToPosition(vDest)")])]),t._v(" "),a("td",[t._v("Issue a Move-To command.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"MoveToPositionAggressive"}},[t._v("void MoveToPositionAggressive(vDest)")])]),t._v(" "),a("td",[t._v("Issue an Attack-Move-To command.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"MoveToTargetToAttack"}},[t._v("void MoveToTargetToAttack(hTarget)")])]),t._v(" "),a("td",[t._v("Move to a target to attack.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"NoHealthBar"}},[t._v("bool NoHealthBar()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"NoTeamMoveTo"}},[t._v("bool NoTeamMoveTo()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"NoTeamSelect"}},[t._v("bool NoTeamSelect()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"NoUnitCollision"}},[t._v("bool NoUnitCollision()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"NotOnMinimap"}},[t._v("bool NotOnMinimap()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"NotOnMinimapForEnemies"}},[t._v("bool NotOnMinimapForEnemies()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"NotifyWearablesOfModelChange"}},[t._v("void NotifyWearablesOfModelChange(bOriginalModel)")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"PassivesDisabled"}},[t._v("bool PassivesDisabled()")])]),t._v(" "),a("td",[t._v("判断该单位是否被禁用被动")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"PatrolToPosition"}},[t._v("void PatrolToPosition(vDest)")])]),t._v(" "),a("td",[t._v("Issue a Patrol-To command.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"PerformAttack"}},[t._v("void PerformAttack(hTarget, bUseCastAttackOrb, bProcessProcs, bSkipCooldown, bIgnoreInvis, bUseProjectile, bFakeAttack, bNeverMiss)")])]),t._v(" "),a("td",[t._v("Performs an attack on a target.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"PickupDroppedItem"}},[t._v("void PickupDroppedItem(hItem)")])]),t._v(" "),a("td",[t._v("Pick up a dropped item.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"PickupRune"}},[t._v("void PickupRune(hItem)")])]),t._v(" "),a("td",[t._v("Pick up a rune.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"PlayVCD"}},[t._v("void PlayVCD(pVCD)")])]),t._v(" "),a("td",[t._v("Play a VCD on the NPC.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"ProvidesVision"}},[t._v("bool ProvidesVision()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"Purge"}},[t._v("void Purge(bRemovePositiveBuffs, bRemoveDebuffs, bFrameOnly, bRemoveStuns, bRemoveExceptions)")])]),t._v(" "),a("td",[t._v("(bool RemovePositiveBuffs, bool RemoveDebuffs, bool BuffsCreatedThisFrameOnly, bool RemoveStuns, bool RemoveExceptions")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"ReduceMana"}},[t._v("void ReduceMana(flAmount)")])]),t._v(" "),a("td",[t._v("Remove mana from this unit, this can be used for involuntary mana loss, not for mana that is spent.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"RemoveAbility"}},[t._v("void RemoveAbility(pszAbilityName)")])]),t._v(" "),a("td",[t._v("Remove an ability from this unit by name.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"RemoveAbilityByHandle"}},[t._v("void RemoveAbilityByHandle(hAbility)")])]),t._v(" "),a("td",[t._v("Remove the passed ability from this unit.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"RemoveGesture"}},[t._v("void RemoveGesture(nActivity)")])]),t._v(" "),a("td",[t._v("Remove the given gesture activity.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"RemoveHorizontalMotionController"}},[t._v("void RemoveHorizontalMotionController(hBuff)")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"RemoveItem"}},[t._v("void RemoveItem(hItem)")])]),t._v(" "),a("td",[t._v("Removes the passed item from this unit's inventory and deletes it.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"RemoveModifierByName"}},[t._v("void RemoveModifierByName(pszScriptName)")])]),t._v(" "),a("td",[t._v("Removes a modifier.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"RemoveModifierByNameAndCaster"}},[t._v("void RemoveModifierByNameAndCaster(pszScriptName, hCaster)")])]),t._v(" "),a("td",[t._v("Removes a modifier that was cast by the given caster.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"RemoveNoDraw"}},[t._v("void RemoveNoDraw()")])]),t._v(" "),a("td",[t._v("Remove the no draw flag.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"RemoveVerticalMotionController"}},[t._v("void RemoveVerticalMotionController(hBuff)")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"RespawnUnit"}},[t._v("void RespawnUnit()")])]),t._v(" "),a("td",[t._v("Respawns the target unit if it can be respawned.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"Script_GetAttackRange"}},[t._v("float Script_GetAttackRange()")])]),t._v(" "),a("td",[t._v("Gets this unit's attack range after all modifiers.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SellItem"}},[t._v("void SellItem(hItem)")])]),t._v(" "),a("td",[t._v("Sells the passed item in this unit's inventory.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetAbilityByIndex"}},[t._v("void SetAbilityByIndex(hAbility, iIndex)")])]),t._v(" "),a("td",[t._v("Set the ability by index.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetAcquisitionRange"}},[t._v("void SetAcquisitionRange(nRange)")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetAdditionalBattleMusicWeight"}},[t._v("void SetAdditionalBattleMusicWeight(flWeight)")])]),t._v(" "),a("td",[t._v("Combat involving this creature will have this weight added to the music calcuations.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetAggroTarget"}},[t._v("void SetAggroTarget(hAggroTarget)")])]),t._v(" "),a("td",[t._v("Set this unit's aggro target to a specified unit.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetAttackCapability"}},[t._v("void SetAttackCapability(iAttackCapabilities)")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetAttacking"}},[t._v("void SetAttacking(hAttackTarget)")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetBaseAttackTime"}},[t._v("void SetBaseAttackTime(flBaseAttackTime)")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetBaseDamageMax"}},[t._v("void SetBaseDamageMax(nMax)")])]),t._v(" "),a("td",[t._v("Sets the maximum base damage.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetBaseDamageMin"}},[t._v("void SetBaseDamageMin(nMin)")])]),t._v(" "),a("td",[t._v("Sets the minimum base damage.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetBaseHealthRegen"}},[t._v("void SetBaseHealthRegen(flHealthRegen)")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetBaseMagicalResistanceValue"}},[t._v("void SetBaseMagicalResistanceValue(flMagicalResistanceValue)")])]),t._v(" "),a("td",[t._v("Sets base magical armor value.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetBaseManaRegen"}},[t._v("void SetBaseManaRegen(flManaRegen)")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetBaseMaxHealth"}},[t._v("void SetBaseMaxHealth(flBaseMaxHealth)")])]),t._v(" "),a("td",[t._v("Set a new base max health value.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetBaseMoveSpeed"}},[t._v("void SetBaseMoveSpeed(iMoveSpeed)")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetCanSellItems"}},[t._v("void SetCanSellItems(bCanSell)")])]),t._v(" "),a("td",[t._v("Set whether or not this unit is allowed to sell items (bCanSellItems)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetControllableByPlayer"}},[t._v("void SetControllableByPlayer(iIndex, bSkipAdjustingPosition)")])]),t._v(" "),a("td",[t._v("Set this unit controllable by the player with the passed ID.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetCursorCastTarget"}},[t._v("void SetCursorCastTarget(hEntity)")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetCursorPosition"}},[t._v("void SetCursorPosition(vLocation)")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetCursorTargetingNothing"}},[t._v("void SetCursorTargetingNothing(bTargetingNothing)")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetCustomHealthLabel"}},[t._v("void SetCustomHealthLabel(pLabel, r, g, b)")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetDayTimeVisionRange"}},[t._v("void SetDayTimeVisionRange(iRange)")])]),t._v(" "),a("td",[t._v("Set the base vision range.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetDeathXP"}},[t._v("void SetDeathXP(iXPBounty)")])]),t._v(" "),a("td",[t._v("Set the XP bounty on this unit.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetForceAttackTarget"}},[t._v("void SetForceAttackTarget(hNPC)")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetForceAttackTargetAlly"}},[t._v("void SetForceAttackTargetAlly(hNPC)")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetHasInventory"}},[t._v("void SetHasInventory(bHasInventory)")])]),t._v(" "),a("td",[t._v("Set if this unit has an inventory.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetHullRadius"}},[t._v("void SetHullRadius(flHullRadius)")])]),t._v(" "),a("td",[t._v("Set the collision hull radius of this NPC.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetIdleAcquire"}},[t._v("void SetIdleAcquire(bIdleAcquire)")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetInitialGoalEntity"}},[t._v("void SetInitialGoalEntity(hGoal)")])]),t._v(" "),a("td",[t._v("Sets the initial waypoint goal for this NPC.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetInitialGoalPosition"}},[t._v("void SetInitialGoalPosition(vPosition)")])]),t._v(" "),a("td",[t._v("Set waypoint position for this NPC.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetMana"}},[t._v("void SetMana(flMana)")])]),t._v(" "),a("td",[t._v("Set the mana on this unit.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetMaxMana"}},[t._v("void SetMaxMana(flMaxMana)")])]),t._v(" "),a("td",[t._v("Set the maximum mana of this unit.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetMaximumGoldBounty"}},[t._v("void SetMaximumGoldBounty(iGoldBountyMax)")])]),t._v(" "),a("td",[t._v("Set the maximum gold bounty for this unit.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetMinimumGoldBounty"}},[t._v("void SetMinimumGoldBounty(iGoldBountyMin)")])]),t._v(" "),a("td",[t._v("Set the minimum gold bounty for this unit.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetModifierStackCount"}},[t._v("void SetModifierStackCount(pszScriptName, hCaster, nStackCount)")])]),t._v(" "),a("td",[t._v("Sets the stack count of a given modifier.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetMoveCapability"}},[t._v("void SetMoveCapability(iMoveCapabilities)")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetMustReachEachGoalEntity"}},[t._v("void SetMustReachEachGoalEntity(must)")])]),t._v(" "),a("td",[t._v("Set whether this NPC is required to reach each goal entity, rather than being allowed to unkink their path.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetNeverMoveToClearSpace"}},[t._v("void SetNeverMoveToClearSpace(neverMoveToClearSpace)")])]),t._v(" "),a("td",[t._v("If set to true, we will never attempt to move this unit to clear space, even when it unphases.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetNightTimeVisionRange"}},[t._v("void SetNightTimeVisionRange(iRange)")])]),t._v(" "),a("td",[t._v("Returns the vision range after modifiers.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetOrigin"}},[t._v("void SetOrigin(vLocation)")])]),t._v(" "),a("td",[t._v("Set the unit's origin.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetOriginalModel"}},[t._v("void SetOriginalModel(pszModelName)")])]),t._v(" "),a("td",[t._v("Sets the original model of this entity, which it will tend to fall back to anytime its state changes.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetPhysicalArmorBaseValue"}},[t._v("void SetPhysicalArmorBaseValue(flPhysicalArmorValue)")])]),t._v(" "),a("td",[t._v("Sets base physical armor value.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetRangedProjectileName"}},[t._v("void SetRangedProjectileName(pProjectileName)")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetRevealRadius"}},[t._v("void SetRevealRadius(revealRadius)")])]),t._v(" "),a("td",[t._v("sets the client side map reveal radius for this unit")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetShouldDoFlyHeightVisual"}},[t._v("void SetShouldDoFlyHeightVisual(bShouldVisuallyFly)")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetStolenScepter"}},[t._v("void SetStolenScepter(bStolenScepter)")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetUnitCanRespawn"}},[t._v("void SetUnitCanRespawn(bCanRespawn)")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SetUnitName"}},[t._v("void SetUnitName(pName)")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"ShouldIdleAcquire"}},[t._v("bool ShouldIdleAcquire()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SpendMana"}},[t._v("void SpendMana(flManaSpent, hAbility)")])]),t._v(" "),a("td",[t._v("Spend mana from this unit, this can be used for spending mana from abilities or item usage.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"StartGesture"}},[t._v("void StartGesture(nActivity)")])]),t._v(" "),a("td",[t._v("Add the given gesture activity.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"StartGestureWithPlaybackRate"}},[t._v("void StartGestureWithPlaybackRate(nActivity, flRate)")])]),t._v(" "),a("td",[t._v("Add the given gesture activity with a playback rate override.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"Stop"}},[t._v("void Stop()")])]),t._v(" "),a("td",[t._v("Stop the current order.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"StopFacing"}},[t._v("void StopFacing()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SwapAbilities"}},[t._v("void SwapAbilities(pAbilityName1, pAbilityName2, bEnable1, bEnable2)")])]),t._v(" "),a("td",[t._v("Swaps the slots of the two passed abilities and sets them enabled/disabled.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"SwapItems"}},[t._v("void SwapItems(nSlot1, nSlot2)")])]),t._v(" "),a("td",[t._v("Swap the contents of two item slots (slot1, slot2)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"TakeItem"}},[t._v("handle TakeItem(hItem)")])]),t._v(" "),a("td",[t._v("Removed the passed item from this unit's inventory.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"TimeUntilNextAttack"}},[t._v("float TimeUntilNextAttack()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"TriggerModifierDodge"}},[t._v("bool TriggerModifierDodge()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"TriggerSpellAbsorb"}},[t._v("bool TriggerSpellAbsorb(hAbility)")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"TriggerSpellReflect"}},[t._v("void TriggerSpellReflect(hAbility)")])]),t._v(" "),a("td",[t._v("Trigger the Lotus Orb-like effect.(hAbility)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"UnHideAbilityToSlot"}},[t._v("void UnHideAbilityToSlot(pszAbilityName, pszReplacedAbilityName)")])]),t._v(" "),a("td",[t._v("Makes the first ability unhidden, and puts it where second ability currently is. Will do nothing if the first ability is already unhidden and in a valid slot.")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✖")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"UnitCanRespawn"}},[t._v("bool UnitCanRespawn()")])]),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])])])])])}),[],!1,null,null,null);e.default=v.exports}}]);